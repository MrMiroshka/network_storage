package hw1;

public class HW1 {
  /*

          1) Как организовать клиент-серверное взаимодействие?
    Если приложение высоконагруженное, то будет несколько серверов и несколько баз данных:
            - Есть приложения клиентов (client applications)
		  - Есть сервер - балансировщик
		  - Есть сервера c server applications (п)
		  - Есть балансировщик бд
		  - Есть сервера с бд
    Если рассматривать наш случай:
            - Есть клиенты или клиент (client applications)
		  - Есть сервер (т.к. у нас простое приложение и даже если мы будем использовать бд то имеет смысл
            объединить это все на одном сервере)


    Клиент отправляет запрос на сервер
    Сервер прочитал сообщение, ответил (или не ответил) клиенту.

    библиотека io (блокирующая);
    библиотека nio (частично не блокирующая);
    Netty (фраемворк)

		  2)Как и в каком виде передавать файлы?
            - Использовать сериализацию объекты
          - Данные по сети передаются в виде байт (разрабатываем свой протокол)

		  3) Как пересылать большие файлы?
            - Дробить файлы на более мелкие части (2гб и меньше)
		  - Копировать файл напрямую в сокет, минуя оперативную память (z-copy)

          4) Как пересылать служебные команды?
            - Отдельно json можно использовать
		  - Можно протсо текстом

		  5) Что хранить в базе данных?
    В Базе данных можно будет хранить данные для авторизации пользователей.
    В самой бд я бы врядли стал хранить файлы. А вот имя файла, тип, дату создания, изменения и дирректорию хранения файла для клиента
    и где он лежит на самом деле на сервере

		  6) Как передавать структуру каталогов/файлов?
    Боюсь предположить, что посредством запросов.
            - json в виде объектов
		  - текстом

		  7) Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?
    Попробую использовать Netty
    */
}
